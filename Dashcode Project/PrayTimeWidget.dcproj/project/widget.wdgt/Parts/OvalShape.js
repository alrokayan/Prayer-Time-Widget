/* 
 This file was generated by Dashcode and is covered by the 
 license.txt included in the project.  You may edit this file, 
 however it is recommended to first turn off the Dashcode 
 code generator otherwise the changes will be lost.
 */

// Note: Properties and methods beginning with underbar ("_") are considered private and subject to change in future Dashcode releases.

function CreateOvalShape(elementOrID, spec)
{
    var ovalShapeElement = elementOrID;
    if (elementOrID.nodeType != Node.ELEMENT_NODE) {
        ovalShapeElement = document.getElementById(elementOrID);
    }

	if (!ovalShapeElement.loaded) 
	{
		ovalShapeElement.loaded = true;
        // when cloning template, get size from original
        var styleElement = ovalShapeElement;
        if (spec.originalID) {
            styleElement = document.getElementById(spec.originalID);
        }
		var imagePrefix = "Images/" + styleElement.id + ".png";
		var height = dashcode.getElementHeight(styleElement) || 20;
		var width = dashcode.getElementWidth(styleElement) || 20;
		ovalShapeElement.object = new OvalShape(ovalShapeElement, height, width, imagePrefix);
		
		return ovalShapeElement.object;
	}
}

function OvalShape(ovalShape, height, width, img)
{
	this._init(ovalShape, height, width, img);
}

OvalShape.prototype.remove = function()
{
	var parent = this._container.parentNode;
	parent.removeChild(this._container);
}

OvalShape.prototype._init = function(ovalShape, height, width, img)
{	
    this.element = ovalShape;
	this._imgPath = img;

	var style = null;
	var element = null;

    while (ovalShape.firstChild) {
        ovalShape.removeChild(ovalShape.firstChild);
    }

	var container = document.createElement("div");
	this._container = container;

	ovalShape.appendChild(container);
	
	// Create the inner elements	
	var element = document.createElement("div");
	var style = element.style;
	style.position = "absolute";
	style.display = "inline-block";
	style.background = "url(" + this._imgPath + ") no-repeat top left";
	style.height = height + "px";
	style.width = width + "px";
	container.appendChild(element);

	style = container.style;
	style.left = 0;
	style.right = 0;
	style.width = "auto";
	style.height = height + "px";
}

OvalShape.prototype._updateImages = function(height, width)
{
	this._container.style.height = height + "px";
	
	var div = this._container.children[0];
	div.style.background = "url(" + this._imgPath + ") no-repeat top left";
	div.style.height = height + "px";
	div.style.width = width + "px";
}
